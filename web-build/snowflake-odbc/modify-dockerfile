#!/usr/bin/env bash
#ddev-generated

set -o errtrace
set -o errexit
set -o pipefail

PACKAGE_PATH="./snowflake-odbc"
TMP_PATH="/tmp"
PACKAGE_NAME="snowflake.deb"

if [ ! -e "./web-build/snowflake-odbc/${PACKAGE_NAME}" ]; then
  echo "Package wasn't correctly downloaded.";
  exit 1;
fi

if [ "$GOARCH" = "amd64" ]; then
  ARCH="x86_64";
elif [ "$GOARCH" = "arm64" ]; then
  ARCH="aarch64";
else
  echo "This package does not work on this machines";
  exit 1;
fi

add_directives() {
  local FILE_PATH="$1"
  cat <<EOF >> "$FILE_PATH"
# BEGIN Snowflake ODBC Install
RUN (apt-get -qq update || true) && DEBIAN_FRONTEND=noninteractive apt-get -qq install -y -o Dpkg::Options::="--force-confold" --no-install-recommends --no-install-suggests php${DDEV_PHP_VERSION}-odbc libodbc1 unixodbc
RUN ln -s "/usr/lib/${ARCH}-linux-gnu/libodbccr.so.2" "/etc/libodbccr.so"
ADD "${PACKAGE_PATH}/${PACKAGE_NAME}" "${TMP_PATH}"
RUN dpkg -i "${TMP_PATH}/${PACKAGE_NAME}"
# END Snowflake ODBC Install
EOF
}

remove_directives() {
  local FILE_PATH="$1"
  TMP_FILE="$(mktemp)"
  between_markers=false

  while IFS= read -r LINE; do
    if [[ $LINE == "# BEGIN Snowflake ODBC Install" ]]; then
      between_markers=true
      continue
    fi

    if [[ $LINE == "# END Snowflake ODBC Install" ]]; then
      between_markers=false
      continue
    fi

    if [ "$between_markers" == false ]; then
      echo "$LINE" >> "$TMP_FILE"
    fi
  done < "$FILE_PATH"

  cat "$TMP_FILE" > "$FILE_PATH"
}

FILE_PATH="./web-build/Dockerfile"
if [ -e "$FILE_PATH" ]; then
	remove_directives "$FILE_PATH"
fi
add_directives "$FILE_PATH"
